///
/// @file i_window_properties.hpp
/// @author Yasin BASAR (yasin.basar@smartalpha.ai)
/// @brief
/// @version 1.0.0
/// @date 22/08/2024
/// @copyright (c) 2024 All rights reserved.
///

#ifndef INTERFACE_WINDOW_PROPERTIES_HPP
#define INTERFACE_WINDOW_PROPERTIES_HPP

////////////////////////////////////////////////////////////////////////////////
// Project Includes
////////////////////////////////////////////////////////////////////////////////

#include <memory>
#include <cstdint>

////////////////////////////////////////////////////////////////////////////////
// Third Party Includes
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Forward and Typedef Declarations
////////////////////////////////////////////////////////////////////////////////

struct GLFWwindow;

namespace YB
{
    class IWindowProperties
    {
    public:
    ////////////////////////////////////////////////////////////////////////////
    // Special Members
    ////////////////////////////////////////////////////////////////////////////

        IWindowProperties() noexcept = default;

        virtual ~IWindowProperties() noexcept = default;

        IWindowProperties(IWindowProperties &&) noexcept = default;

        IWindowProperties &operator=(IWindowProperties &&) noexcept = default;

        IWindowProperties(const IWindowProperties &) noexcept = default;

        IWindowProperties &operator=(IWindowProperties const &) noexcept = default;

    ////////////////////////////////////////////////////////////////////////////
    // Public Members
    ////////////////////////////////////////////////////////////////////////////

        virtual void image_show(uint8_t * data_ptr,
                                int frame_width,
                                int frame_height,
                                volatile bool& t_exit_status) noexcept = 0;

    ////////////////////////////////////////////////////////////////////////////
    // Private Members
    ////////////////////////////////////////////////////////////////////////////
    private:

        /* Data */

    ////////////////////////////////////////////////////////////////////////////
    // Protected Members
    ////////////////////////////////////////////////////////////////////////////
    protected:

        /* Data */

    };

} // namespace YB

#endif // INTERFACE_WINDOW_PROPERTIES_HPP

/* End of File */
